ScalikeJDBC 1.5.3 has been released. interpolation, mapper-generator, config and test are changed.

![ScalikeJDBC Logo](https://raw.github.com/seratch/scalikejdbc/master/logo.png)

http://git.io/scalikejdbc

## interpolation

- #116 Possible SQL injection vulnerability

Disabled to use `SQLSyntax.apply(String)` and the constructor of `SQLSyntax` class.

- #117 Type safety for insert/update SQL 

Before:

    sql"inser into ${Member.table} (id, full_name) values (${id}, ${fullName})".update.apply()

After:

    val column = Member.column
    sql"inser into ${Member.table} (${column.id}, ${column.fullName}) values (${id}, ${fullName})".update.apply()

- Enabled using " or ' in column name

The following code works with this version.

    case class Range(from: DateTime, to: DateTime) 
    object Range extends SQLSyntaxSupport[Range]{
      override val nameConverters = Map("^from$" -> "\"from\"")
    }
    val r = Range.syntax("r")
    sql"select ${r.result.*} from ${Range.as(r)}".map(Range(r.resultName)).list.apply()

- Enabled using underscore as first/last character of field name

The following code works with this version.

    case class Something(_type: String)
    object Something(_type: String)

## mapper-generator

- Updated create/update/delete method generation for interpolation template

Repleated with #117.

## test

- Followed ScalaTest's API change

Fixed the issue that AutoRollback for ScalaTest didn't work with ScalaTest latest version.

## config

- Refactored TypesafeConfigReader#dbNames by @tototoshi

Just improved.


Enjoy writing (mostly) typesafe SQL and get things done!

